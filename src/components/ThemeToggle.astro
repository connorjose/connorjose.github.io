---
---
<button toggle-theme-button class="select-none" title="Toggle theme">
  <div i-ri-sun-line dark:i-ri-moon-line></div>
</button>

<script is:inline>
const root = document.documentElement;

function applyTheme(isDark) {
  root.classList.toggle('dark', isDark);
}

function toggleDark(button) {
  const apperanceTransition = document.startViewTransition 
    && !(window.matchMedia('(prefers-reduced-motion: reduce')).matches;

  const rect = button.getBoundingClientRect();
  const x = rect.left + rect.width / 2;
  const y = rect.top + rect.height / 2;
  const dx = Math.max(x, window.innerWidth - x);
  const dy = Math.max(y, window.innerHeight - y);
  const radius = Math.hypot(dx, dy);
  const next = !root.classList.contains('dark');

  const doToggle = () => applyTheme(next);
  if (!apperanceTransition) doToggle();

  const transition = document.startViewTransition(() => {
    doToggle();
  })

  transition.ready
  .then(() => {
    const clipPath = [
        `circle(0px at ${x}px ${y}px)`,
        `circle(${radius}px at ${x}px ${y}px)`,
      ];
    root.animate(
      {
        clipPath: next ? [...clipPath].reverse()
            : clipPath,
      },
      {
        duration: 400,
        easing: 'ease-out',
        fill: 'forwards',
        pseudoElement: next
          ? '::view-transition-old(root)'
          : '::view-transition-new(root)',
      }
    )
  })
}

document.querySelector('[toggle-theme-button]').addEventListener('click', (e) => toggleDark(e.currentTarget));
</script>

<style>
button {
  cursor: pointer;
  transition: opacity 0.2s ease;
  opacity: 0.6;
  outline: none;
}
button:hover {
  opacity: 1;
}
</style>